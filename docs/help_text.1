.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "SILO benchmarking CI system help" "" "" "" ""
.hy
.SH Programs and logs
.PP
Everything goes through the \f[V]evobench-run\f[R] tool.
Run it without arguments (or \f[V]--help\f[R], \f[V]-h\f[R] or
\f[V]help\f[R]) to get a help text.
.IP \[bu] 2
You will primarily use the \f[V]list\f[R], \f[V]list-all\f[R], and
\f[V]insert\f[R] subcommands.
.IP \[bu] 2
The crontab runs \f[V]\[ti]/bin/evobench-run-poll\f[R], with a log in
\f[V]\[ti]/log/evobench-poll.log\f[R]
.IP \[bu] 2
The daemon that runs the jobs, running as
\f[V]evobench-run -v run     daemon\f[R], currently in a screen session,
logs to \f[V]\[ti]/log/daemon.log\f[R].
(This command must be started after first running
\f[V]source \[ti]/venv/bin/activate\f[R], or SILO won\[cq]t build!)
.PP
When you see a program with a name like \f[V]silo_02daf40559\f[R]
running in top/ps/whatever, then you know that it was started by the
benchmarks\[em]\[em]the SILO benchmark runner renames the binaries to
make sure rebuilds happen precisely when re-using a working directory
for a commit it hasn\[cq]t seen, and as a side effect this allows
distinguishing those programs from normal \f[V]silo\f[R] instances.
.PP
The \f[V]evobench-run\f[R] tool is built from the
\f[V]\[ti]/evobench/evobench-evaluator\f[R] directory, in case you need
to install a newer version.
.SH Queues and working directories
.PP
Use \f[V]evobench-run list\f[R] or \f[V]evobench-run list -v\f[R] to see
the current state of the processing queues.
If you need to investigate some failures:
.IP
.nf
\f[C]
  cd \[ti]/.evobench-run/working_directory_pool/
  ls -lrt
\f[R]
.fi
.PP
Then find the right \f[V]*.error_at_*\f[R] file, and for the same
timestamp, the \f[V]*.output_of_benchmarking_command_at_*\f[R] file.
\f[V]cd N.*/\f[R] where N is the number of the working directory that
had the error.
If you need to work with SILO inside, rename the directory back to just
N first.
Renaming back to N is also giving it back to the pool, so it can be
re-used for benchmarking (but it will currently only be picked up when
the daemon is restarted (potential TODO for improvements)).
.SH Results and datasets
.PP
The results are written to \f[V]\[ti]/silo-benchmark-outputs\f[R]
.PP
\f[V]\[ti]/www_data\f[R] (currently a symlink to
\f[V]\[ti]/silo-benchmark-outputs\f[R]) is what\[cq]s shown on
<https://silo-benchmarks.genspectrum.org/>
.PP
The input datasets are in \f[V]\[ti]/silo-benchmark-datasets/\f[R].
Please never modify existing datasets, it would invalidate existing
results.
Add a new subdirectory (besides \f[V]full\f[R]) if you want to add a
different dataset.
You can refer to it by name via the \f[V]BENCHMARK_DATASET_NAME\f[R]
custom parameter in the \f[V]custom_parameters_set\f[R] field in the
config file, see below for where to find that.
.SH Configuration
.PP
If you want to read or need to edit the configuration, you find it in
\f[V]\[ti]/etc/\f[R].
The file \f[V]evobench-run.ron\f[R] there is referenced by symlink from
\f[V]\[ti]/.evobench-run.ron\f[R], which is the location read by
\f[V]evobench-run\f[R].
\f[V]\[ti]/etc/\f[R] is a Git repository, commit your changes!
