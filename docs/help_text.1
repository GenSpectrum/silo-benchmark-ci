.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "SILO benchmarking CI system help" "" "" "" ""
.hy
.SH Essentials
.IP \[bu] 2
Insert: simply force-push your commit from your laptop to your branch
\f[V]bench_$USER\f[R] in the SILO repository on GitHub, where USER is
your ssh username here (e.g.\ \[lq]alexander\[rq]).
(Alternatively, \f[V]evobench-run insert $commit\f[R].)
.IP \[bu] 2
Aliases
.RS 2
.IP \[bu] 2
\f[V]list\f[R]: watch the job list (runs
\f[V]watch evobench-run list\f[R] with color options, or if options are
passed, pipes to less instead; \f[V]-v\f[R] and \f[V]-a\f[R] are the
most likely used options.)
.IP \[bu] 2
\f[V]list-all\f[R]: see all ever inserted jobs (runs
\f[V]evobench-run list-all\f[R] with pager and color option; passes
through given options)
.RE
.IP \[bu] 2
Outputs: see <https://silo-benchmarks.genspectrum.org/> or
\f[V]\[ti]/silo-benchmark-outputs\f[R].
.SH Programs and logs
.PP
Everything goes through the \f[V]evobench-run\f[R] tool.
Run it without arguments (or \f[V]--help\f[R], \f[V]-h\f[R] or
\f[V]help\f[R]) to get a help text.
.IP \[bu] 2
You will primarily use the \f[V]list\f[R], \f[V]list-all\f[R], and
\f[V]insert\f[R] subcommands.
.IP \[bu] 2
The crontab runs \f[V]\[ti]/bin/evobench-run-poll\f[R], with a log in
\f[V]\[ti]/log/evobench-poll.log\f[R]
.IP \[bu] 2
The daemon that runs the jobs, running as
\f[V]evobench-run -v run     daemon\f[R], currently in a screen session,
logs to \f[V]\[ti]/log/daemon.log\f[R].
(This command must be started after first running
\f[V]source \[ti]/venv/bin/activate\f[R], or SILO won\[cq]t build!)
\f[V]tail     -f \[ti]/log/daemon.log\f[R] will show you interactively
what\[cq]s going on.
.PP
When you see a program with a name like \f[V]silo_02daf40559\f[R]
running in top/ps/whatever, then you know that it was started by the
benchmarks\[em]\[em]the SILO benchmark runner renames the binaries to
make sure rebuilds happen precisely when re-using a working directory
for a commit it hasn\[cq]t seen, and as a side effect this allows
distinguishing those programs from normal \f[V]silo\f[R] instances.
.PP
The \f[V]evobench-run\f[R] tool is built from the
\f[V]\[ti]/evobench/evobench-evaluator\f[R] directory.
To install a new version, after \f[V]git pull\f[R], use
\f[V]cargo install --locked --path .\f[R] from the root of this
directory (the \f[V]--locked\f[R] option says to use the dependencies
from the \f[V]Cargo.lock\f[R], which are known working and partially
reviewed or otherwise somewhat checked for supply chain safety; by
default it would install the newest possible versions).
.SH Queues
.PP
Use \f[V]evobench-run list\f[R] or \f[V]evobench-run list -v\f[R] to see
the current state of the processing queues.
You could run \f[V]watch evobench-run list\f[R] (or
\f[V]watch --color evobench-run list --color=always\f[R] to see
formatting) to watch queue changes on the side.
.PP
The queues consist of directories containing files, one job per file,
under \f[V]\[ti]/.evobench-run/queues\f[R].
If you\[cq]re careful, you can move jobs between queues by just moving
the files (using the \f[V]mv\f[R] command or similar), except you
shouldn\[cq]t move the file if it is currently locked (which means,
being executed).
Use \f[V]evobench-run list -v\f[R] to both see the file names for each
job, and whether it is locked.
(A subcommand to do such moves safely could be added if desired.)
.SH Working directories
.PP
evobench-run maintains a pool of working directories (clones of the
target project repository) under
\f[V]\[ti]/.evobench-run/working_directory_pool/\f[R] that it uses to
avoid the need to rebuild when a job for the same commit id is run
again.
When there is a failure (be it build or run time) in a particular
working directory, it is set aside to allow investigation.
Also saved in this directory are log files of the outputs (stderr lines
as \[lq]E\[rq] and stdout lines as \[lq]O\[rq]) of the process under
benchmarking.
.PP
So if there was a failure (a job ended up in the
\[lq]erroneous-jobs\[rq] queue) that you want to investigate:
.IP
.nf
\f[C]
  cd \[ti]/.evobench-run/working_directory_pool/
  ls -lrt
\f[R]
.fi
.PP
Then find the right \f[V]*.error_at_*\f[R] file, and for the same
timestamp, the \f[V]*.output_of_benchmarking_command_at_*\f[R] file.
\f[V]cd N.*/\f[R] where N is the number of the working directory that
had the error.
If you need to work with SILO inside, rename the directory back to just
N first.
Renaming back to N is also giving it back to the pool, so it can be
re-used for benchmarking (but it will currently only be picked up when
the daemon is restarted (potential TODO for improvements)).
.SH Results and datasets
.PP
The results are written to \f[V]\[ti]/silo-benchmark-outputs\f[R]
.PP
\f[V]\[ti]/www_data\f[R] (currently a symlink to
\f[V]\[ti]/silo-benchmark-outputs\f[R]) is what\[cq]s shown on
<https://silo-benchmarks.genspectrum.org/>
.PP
The input datasets are in \f[V]\[ti]/silo-benchmark-datasets/\f[R].
Please never modify existing datasets, it would invalidate existing
results.
Add a new subdirectory (besides \f[V]SC2open\f[R] and
\f[V]west_nile\f[R]) if you want to add a different dataset.
You can refer to it by name via the \f[V]BENCHMARK_DATASET_NAME\f[R]
custom parameter in the \f[V]custom_parameters_set\f[R] field in the
config file, see below for where to find that.
.SH Configuration
.PP
If you want to read or need to edit the configuration, you find it in
\f[V]\[ti]/etc/\f[R], which is a symlink to
\f[V]\[ti]/.silo-benchmark-ci/etc\f[R].
The file \f[V]evobench-run.ron\f[R] in this directory is referenced by
symlink from \f[V]\[ti]/.evobench-run.ron\f[R], which is the location
read by \f[V]evobench-run\f[R].
Since this is a Git repository, please commit your changes\[em]\[em]they
should end up on <https://github.com/GenSpectrum/silo-benchmark-ci/>
eventually.
.PP
That same repository is also independently cloned at
\f[V]/opt/silo-benchmark-ci\f[R], but just for the
\f[V]/opt/silo-benchmark-ci/root/other-activity\f[R] file, which is
configured to be executed via sudo (hence we keep this file separate,
owned by root, for security).
.SH SEE ALSO
.IP \[bu] 2
Evobench
documentation (https://github.com/GenSpectrum/evobench/blob/master/evobench-evaluator/docs/overview.md)
